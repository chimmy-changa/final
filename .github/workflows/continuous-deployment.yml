name: MATLAB Jupyter Integration

on: [push]

jobs:
  node_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - run: npm --prefix gui install gui
      - run: npm run --prefix gui build --if-present
      - run: npm --prefix gui test
        env:
          CI: true

  python_app:
    needs: node_app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black pytest
      - name: Lint with black
        run: |
          black --check .
      - name: Test with pytest
        run: |
          pytest

  python_app_wheel:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: python_app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: Build wheel
        run: |
          python setup.py bdist_wheel
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Release ${{ github.ref }}
          draft: false
          prerelease: false